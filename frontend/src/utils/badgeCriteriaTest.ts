/**
 * –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –±–µ–π–¥–∂–µ–π
 */

import { 
  createBadgeCriteria, 
  parseBadgeCriteria, 
  getBadgeCriteriaDescription,
  BADGE_CRITERIA_PRESETS,
  isValidBadgeCriteria 
} from './badgeCriteria';

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function test(description: string, condition: boolean) {
  console.log(`${condition ? '‚úÖ' : '‚ùå'} ${description}`);
  return condition;
}

console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –±–µ–π–¥–∂–µ–π...\n');

let passedTests = 0;
let totalTests = 0;

function runTest(description: string, condition: boolean) {
  totalTests++;
  if (test(description, condition)) {
    passedTests++;
  }
}

// –¢–µ—Å—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
console.log('üìù –¢–µ—Å—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:');
runTest(
  '–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–Ω–∏–≥',
  createBadgeCriteria({ type: 'books_read', value: 10 }) === 'read_10'
);

runTest(
  '–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
  createBadgeCriteria({ type: 'registration', value: 1 }) === 'registration'
);

runTest(
  '–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π',
  createBadgeCriteria({ type: 'referral', value: 3 }) === 'referral_3'
);

// –¢–µ—Å—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞
console.log('\nüîç –¢–µ—Å—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:');
const readParsed = parseBadgeCriteria('read_25');
runTest(
  '–ü–∞—Ä—Å–∏–Ω–≥ read_25',
  readParsed?.type === 'books_read' && readParsed?.value === 25
);

const regParsed = parseBadgeCriteria('registration');
runTest(
  '–ü–∞—Ä—Å–∏–Ω–≥ registration',
  regParsed?.type === 'registration' && regParsed?.value === 1
);

runTest(
  '–ü–∞—Ä—Å–∏–Ω–≥ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è',
  parseBadgeCriteria('invalid_criteria') === null
);

// –¢–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
console.log('\n‚úÖ –¢–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏:');
runTest(
  '–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è',
  isValidBadgeCriteria('read_10') === true
);

runTest(
  '–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è',
  isValidBadgeCriteria('invalid') === false
);

// –¢–µ—Å—Ç—ã –æ–ø–∏—Å–∞–Ω–∏–π
console.log('\nüìñ –¢–µ—Å—Ç—ã –æ–ø–∏—Å–∞–Ω–∏–π:');
runTest(
  '–û–ø–∏—Å–∞–Ω–∏–µ registration',
  getBadgeCriteriaDescription('registration') === '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'
);

runTest(
  '–û–ø–∏—Å–∞–Ω–∏–µ read_1',
  getBadgeCriteriaDescription('read_1') === '–ü—Ä–æ—á—Ç–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∫–Ω–∏–≥–∏'
);

runTest(
  '–û–ø–∏—Å–∞–Ω–∏–µ read_10',
  getBadgeCriteriaDescription('read_10') === '–ü—Ä–æ—á—Ç–µ–Ω–∏–µ 10 –∫–Ω–∏–≥'
);

// –¢–µ—Å—Ç—ã –ø—Ä–µ—Å–µ—Ç–æ–≤
console.log('\nüéØ –¢–µ—Å—Ç—ã –ø—Ä–µ—Å–µ—Ç–æ–≤:');
runTest(
  '–ü—Ä–µ—Å–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
  BADGE_CRITERIA_PRESETS.REGISTRATION === 'registration'
);

runTest(
  '–ü—Ä–µ—Å–µ—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–∏–≥–∏',
  BADGE_CRITERIA_PRESETS.FIRST_BOOK === 'read_1'
);

runTest(
  '–ü—Ä–µ—Å–µ—Ç 10 –∫–Ω–∏–≥',
  BADGE_CRITERIA_PRESETS.BOOKS_10 === 'read_10'
);

// –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤: ${passedTests}/${totalTests} –ø—Ä–æ–π–¥–µ–Ω–æ`);

if (passedTests === totalTests) {
  console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
} else {
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${totalTests - passedTests}`);
}

export {}; // –î–µ–ª–∞–µ–º —Ñ–∞–π–ª –º–æ–¥—É–ª–µ–º
